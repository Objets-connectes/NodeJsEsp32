version: "3.9"
services:
  app:
    build: ./app
    env_file:
      - .env
    depends_on:
      - mongo
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - iotnet
  mongo:
    image: mongo:6
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - iotnet
  mongo-express:
    image: mongo-express:1.0.2-20
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongo
    networks:
      - iotnet
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mosquitto-broker
    ports:
      - "1883:1883"
    networks: 
      - iotnet

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000" 
    networks:
      - iotnet
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
    depends_on:
      - mongo
      - mongo-api 

  mongo-api: 
    build: ./mongo-api 
    container_name: mongo-api
    restart: unless-stopped
    networks:
      - iotnet
    depends_on:
      - mongo
  nginx:
    build:
      context: .             
      dockerfile: ./nginx/Dockerfile 
    container_name: nginx-web
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - iotnet

volumes:
  mongo_data:
  grafana_data: {}

networks:
  iotnet:
    driver: bridge